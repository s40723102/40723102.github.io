var tipuesearch = {"pages": [{'title': '首頁', 'text': '設計一甲-40723102林昱秀 \n 分組網頁: https://mdewcm2019.github.io/wcm2019-task-g1/content/ \n', 'tags': '', 'url': '首頁.html'}, {'title': 'Github', 'text': '', 'tags': '', 'url': 'Github.html'}, {'title': 'GIT指令', 'text': '>C:/Y:\xa0\xa0\xa0切換至C/Y槽 \n cd\xa0\xa0更換目錄 \n cls\xa0清理 \n git clone\xa0+網址\xa0\xa0從遠端倉儲複製到近端(並建立工作目錄) \n git pull\xa0\xa0將遠端倉儲之最新版本更新回來 \n git status\xa0\xa0檢查狀態 \n git log\xa0\xa0查看版本之歷史紀錄 \n git branch\xa0\xa0檢視分支 \n git branch name\xa0\xa0建立分支 \n git checkout name\xa0\xa0切換分支 \n git checkout -b name\xa0\xa0建立分支並切換至最新分支 \n git checkout -d name\xa0\xa0刪除分支 \n config --global user.name "40723102 or xxx"\xa0\xa0\xa0設定使用者名稱 \n git config --global user.email "40723102@gm.nfu.edu.tw"\xa0 \xa0設定使用者信箱 \n git init\xa0\xa0把當前目錄變成git可管理之倉儲 \n git show\xa0\xa0查看該版本之相關資訊 \n git bebase\xa0\xa0把另一分支變更,當作目前使用分支之基礎 \n git remote add xxx\xa0\xa0註記在遠端下 \n git checkout .\xa0 \xa0回到上一個提交(當從上一個提交到下一次操作發生致命資料丟失使用) \n git add .\xa0拍快照 \n git commit -m "標題or描述"\xa0\xa0把暫存區之檔案提交到倉儲 \n git push\xa0把近端存儲庫中物件推到遠端倉儲', 'tags': '', 'url': 'GIT指令.html'}, {'title': 'Python是什麼', 'text': '1. 容易撰寫 -Python 通常可以靠比較短的程式碼完成較多的功能，或者可寫得比較清楚。 \n 2. 功能強大 -Python絕大部分都是開放原始碼的，與主要作業系統的支援功能等等，含括的範圍非常地廣泛。 \n 3. 跨平台 -各種主要的作業系統都支援 Python。Python 程式常常不需要修改。所撰寫的 Python 程式透過標準的模組進行包裝後，用標準的方式即可安裝於各種平台。 \n 4. 容易擴充 - Python 算是執行效率不錯的直譯式語言。Python本身被設計為可擴充的。因此，有很多人把Python作為一種「膠水語言」（glue language）使用。使用Python將其他語言編寫的程式進行整合和封裝。 \n', 'tags': '', 'url': 'Python是什麼.html'}, {'title': '基本操作練習', 'text': '從課堂中學習並練習所學', 'tags': '', 'url': '基本操作練習.html'}, {'title': '建立個人的 Github Pages 網站', 'text': '操作如何利用 p37 中的 git 建立個人的 Github Pages 網站 \n \n 進入github.io網站，創建個人帳號 \n 建立新的倉儲-40723102.github.io \n git clone https://github.com/mdecourse/2018fall \n git clone https://github.com/s40723120/s40723102.github.io \n 從2018fall資料夾複製裡面的檔案，排除.git和README.me，貼到自己的資料夾(40723102)內 \n git status(檢查狀態)->git add .(增加)->git commit -m "name"( 提交)->git push (推送至遠端) \n 完成 \n \n \n', 'tags': '', 'url': '建立個人的 Github Pages 網站.html'}, {'title': 'git 基本操作練習', 'text': '\n', 'tags': '', 'url': 'git 基本操作練習.html'}, {'title': 'CMSimfly中插入影片', 'text': '\xa01.以\xa0Leo Editor \xa0開啟 config/reveal.leo \n \n 2.到你要貼上的影片網站 ,\xa0 點選下方分享 \n 3.再點選嵌入 ,\xa0 複製右方文字 \n 4.至Leo Editor貼上 \n 5.儲存 \n 6.完成 \n \n', 'tags': '', 'url': 'CMSimfly中插入影片.html'}, {'title': '倉儲改版', 'text': '倉儲版本更新 \n', 'tags': '', 'url': '倉儲改版.html'}, {'title': '學習解決倉儲合併衝突', 'text': '1.先將.htm檔拖曳到SciTE文字編輯器，找出衝突點。 \n 2.刪除頭(<<<<<<<)尾(>>>>>>>)與接\xa0合處 (=======)後，儲存並重新進入近端，將之轉成Generapage。 \n 3.最後git add . ->gitcommit\xa0->git push。 \n \n', 'tags': '', 'url': '學習解決倉儲合併衝突.html'}, {'title': '如何更改reveal投影片', 'text': '\xa0 \xa0 1.在workbook.leo裡打開reveal.ieo \n \xa0 \xa0 \xa0 \xa0 \n \xa0 \xa0 2.更改成任意字->(40723102) \n \xa0 \xa0 \xa0 \xa0[CMSfly]後面括號內加網址 \n \xa0 \xa0 \xa0 \xa0 \n \xa0 \xa0 3.儲存save \n \xa0 \xa0 \xa0 \xa0\xa0 \n \xa0 \xa0 \xa04.重整reveal網頁 \n \xa0 \xa0 \xa0 \xa0 \xa0 \n \xa0 \xa05.完成 \n \n', 'tags': '', 'url': '如何更改reveal投影片.html'}, {'title': '升級倉儲中的 flaskapp py', 'text': '\n 進入 https://github.com/chiamingyen/cmsimfly \n 點選flaskapp.py>Raw>全選並複製 \n 打開自己倉儲的flaskapp.py> \n 全部刪除再貼上 \n 完成 \n \n', 'tags': '', 'url': '升級倉儲中的 flaskapp py.html'}, {'title': '更新README', 'text': '\xa0 \xa0 1.先到github個人倉儲 \n \xa0\xa0 \n \xa0 \xa0 2.到網頁下方點選鉛筆圖案來編輯 \n \xa0 \xa0 \xa0 \xa0 \n \xa0 \xa0 3.編輯完點選下方Commit Changes即可 \n \xa0 \xa0 \xa0 \n \xa0 \xa0 4.完成 \n', 'tags': '', 'url': '更新README.html'}, {'title': '頁面編輯', 'text': '\n CMSimfly 動態系統的網際編輯器採用  TinyMCE4 , 可以放入一般超文件,\xa0 納入圖檔, 嵌入影片連結, 並且加入帶有行數的原始碼. \n 透過 File Upload 功能, 可以一次上傳多個檔案,\xa0 存入 downloads 目錄中儲存, 之後各頁面可以引入對應連結. \n 而圖檔的上傳與引用與一般檔案類似, 但上傳後存入 images 目錄中.', 'tags': '', 'url': '頁面編輯.html'}, {'title': '插入程式碼', 'text': 'CMSimfly 目前使用 Syntaxhighlighter 3.0.83: \n \xa0 http://alexgorbatchev.com/SyntaxHighlighter/ \xa0 \n 進行頁面中的程式碼高亮顯示. \n', 'tags': '', 'url': '插入程式碼.html'}, {'title': 'Java 程式碼', 'text': 'import java.util.Scanner;\n\npublic class Life {\n    public static void show(boolean[][] grid){\n        String s = "";\n        for(boolean[] row : grid){\n            for(boolean val : row)\n                if(val)\n                    s += "*";\n                else\n                    s += ".";\n            s += "\\n";\n        }\n        System.out.println(s);\n    }\n    \n    public static boolean[][] gen(){\n        boolean[][] grid = new boolean[10][10];\n        for(int r = 0; r < 10; r++)\n            for(int c = 0; c < 10; c++)\n                if( Math.random() > 0.7 )\n                    grid[r][c] = true;\n        return grid;\n    }\n    \n    public static void main(String[] args){\n        boolean[][] world = gen();\n        show(world);\n        System.out.println();\n        world = nextGen(world);\n        show(world);\n        Scanner s = new Scanner(System.in);\n        while(s.nextLine().length() == 0){\n            System.out.println();\n            world = nextGen(world);\n            show(world);\n            \n        }\n    }\n    \n    public static boolean[][] nextGen(boolean[][] world){\n        boolean[][] newWorld \n            = new boolean[world.length][world[0].length];\n        int num;\n        for(int r = 0; r < world.length; r++){\n            for(int c = 0; c < world[0].length; c++){\n                num = numNeighbors(world, r, c);\n                if( occupiedNext(num, world[r][c]) )\n                    newWorld[r][c] = true;\n            }\n        }\n        return newWorld;\n    }\n    \n    public static boolean occupiedNext(int numNeighbors, boolean occupied){\n        if( occupied && (numNeighbors == 2 || numNeighbors == 3))\n            return true;\n        else if (!occupied && numNeighbors == 3)\n            return true;\n        else\n            return false;\n    }\n\n    private static int numNeighbors(boolean[][] world, int row, int col) {\n        int num = world[row][col] ? -1 : 0;\n        for(int r = row - 1; r <= row + 1; r++)\n            for(int c = col - 1; c <= col + 1; c++)\n                if( inbounds(world, r, c) && world[r][c] )\n                    num++;\n\n        return num;\n    }\n\n    private static boolean inbounds(boolean[][] world, int r, int c) {\n        return r >= 0 && r < world.length && c >= 0 &&\n        c < world[0].length;\n    }\n\n} \n \n', 'tags': '', 'url': 'Java 程式碼.html'}, {'title': 'Python 程式碼', 'text': 'def parse_content():\n    """use bs4 and re module functions to parse content.htm"""\n    #from pybean import Store, SQLiteWriter\n    # if no content.db, create database file with cms table\n    \'\'\'\n    if not os.path.isfile(config_dir+"content.db"):\n        library = Store(SQLiteWriter(config_dir+"content.db", frozen=False))\n        cms = library.new("cms")\n        cms.follow = 0\n        cms.title = "head 1"\n        cms.content = "content 1"\n        cms.memo = "first memo"\n        library.save(cms)\n        library.commit()\n    \'\'\'\n    # if no content.htm, generate a head 1 and content 1 file\n    if not os.path.isfile(config_dir+"content.htm"):\n        # create content.htm if there is no content.htm\n        File = open(config_dir + "content.htm", "w", encoding="utf-8")\n        File.write("<h1>head 1</h1>content 1")\n        File.close()\n    subject = file_get_contents(config_dir+"content.htm")\n    # deal with content without content\n    if subject == "":\n        # create content.htm if there is no content.htm\n        File = open(config_dir + "content.htm", "w", encoding="utf-8")\n        File.write("<h1>head 1</h1>content 1")\n        File.close()\n        subject = "<h1>head 1</h1>content 1"\n    # initialize the return lists\n    head_list = []\n    level_list = []\n    page_list = []\n    # make the soup out of the html content\n    soup = bs4.BeautifulSoup(subject, \'html.parser\')\n    # 嘗試解讀各種情況下的標題\n    soup = _remove_h123_attrs(soup)\n    # 改寫 content.htm 後重新取 subject\n    with open(config_dir + "content.htm", "wb") as f:\n        f.write(soup.encode("utf-8"))\n    subject = file_get_contents(config_dir+"content.htm")\n    # get all h1, h2, h3 tags into list\n    htag= soup.find_all([\'h1\', \'h2\', \'h3\'])\n    n = len(htag)\n    # get the page content to split subject using each h tag\n    temp_data = subject.split(str(htag[0]))\n    if len(temp_data) > 2:\n        subject = str(htag[0]).join(temp_data[1:])\n    else:\n        subject = temp_data[1]\n    if n >1:\n            # i from 1 to i-1\n            for i in range(1, len(htag)):\n                head_list.append(htag[i-1].text.strip())\n                # use name attribute of h* tag to get h1, h2 or h3\n                # the number of h1, h2 or h3 is the level of page menu\n                level_list.append(htag[i-1].name[1])\n                temp_data = subject.split(str(htag[i]))\n                if len(temp_data) > 2:\n                    subject = str(htag[i]).join(temp_data[1:])\n                else:\n                    subject = temp_data[1]\n                # cut the other page content out of htag from 1 to i-1\n                cut = temp_data[0]\n                # add the page content\n                page_list.append(cut)\n    # last i\n    # add the last page title\n    head_list.append(htag[n-1].text.strip())\n    # add the last level\n    level_list.append(htag[n-1].name[1])\n    temp_data = subject.split(str(htag[n-1]))\n    # the last subject\n    subject = temp_data[0]\n    # cut the last page content out\n    cut = temp_data[0]\n    # the last page content\n    page_list.append(cut)\n    return head_list, level_list, page_list\n\n \n \n', 'tags': '', 'url': 'Python 程式碼.html'}, {'title': 'C或C++程式碼', 'text': '請注意, 目前 CMSimfly 標題內文無法解讀 "/" 符號, 因此若本頁面的標題為\xa0 "C/C++程式碼", 則無法進行分頁. \n /* Runge Kutta for a set of first order differential equations */\n \n#include <stdio.h>\n#include <math.h>\n \n#define N 2 /* number of first order equations */\n#define dist 0.1 /* stepsize in t*/\n#define MAX 30.0 /* max for t */\n \nFILE *output; /* internal filename */\nFILE *output1; /* internal filename */\n// 利用 pipe 呼叫 gnuplot 繪圖\nFILE *pipe;\n \nvoid runge4(double x, double y[], double step); /* Runge-Kutta function */\ndouble f(double x, double y[], int i); /* function for derivatives */\n \nvoid main(){\n \n  double t, y[N];\n  int j;\n \n  output=fopen("osc.dat", "w"); /* external filename */\n  output1=fopen("osc1.dat", "w"); /* external filename */\n \n  y[0]=1.0; /* initial position */\n  y[1]=0.0; /* initial velocity */\n \n  //fprintf(output, "0\\t%f\\n", y[0]);\n \n  for (j=1; j*dist<=MAX ;j++) /* time loop */{\n \n    t=j*dist;\n    runge4(t, y, dist);\n    fprintf(output, "%f\\t%f\\n", t, y[0]);\n    fprintf(output1, "%f\\t%f\\n", t, y[1]);\n  }\n \n  fclose(output);\n  fclose(output1);\n \n  pipe = popen("gnuplot -persist","w");\n  //fprintf(pipe,"set term png enhanced font \\"v:/fireflysung.ttf\\" 18 \\n");\n  fprintf(pipe,"set term png enhanced font \\"y:/wqy-microhei.ttc\\" 18 \\n");\n  //fprintf(pipe,"set yrange [68:70]\\n");\n  fprintf(pipe,"set output \\"test.png\\"\\n");\n  fprintf(pipe, "plot \\"osc.dat\\" title \\"位移\\" with lines, \\"osc1.dat\\" title \\"速度\\" with lines\\n");\n  fprintf(pipe,"quit\\n");\n\n  fprintf(pipe,"quit\\n");\n  pclose(pipe);\n}\n \nvoid runge4(double x, double y[], double step){\n \n  double h=step/2.0, /* the midpoint */\n  t1[N], t2[N], t3[N], /* temporary storage arrays */\n  k1[N], k2[N], k3[N],k4[N]; /* for Runge-Kutta */\n  int i;\n \n  for (i=0;i<N;i++){\n \n    t1[i]=y[i]+0.5*(k1[i]=step*f(x,y,i));\n  }\n \n  for (i=0;i<N;i++){\n \n    t2[i]=y[i]+0.5*(k2[i]=step*f(x+h, t1, i));\n  }\n \n  for (i=0;i<N;i++){\n \n    t3[i]=y[i]+ (k3[i]=step*f(x+h, t2, i));\n  }\n \n  for (i=0;i<N;i++){\n \n    k4[i]= step*f(x+step, t3, i);\n  }\n \n  for (i=0;i<N;i++){\n \n    y[i]+=(k1[i]+2*k2[i]+2*k3[i]+k4[i])/6.0;\n  }\n}\n \ndouble f(double x, double y[], int i){\n \n  if (i==0)\n    x=y[1]; /* derivative of first equation */\n  if (i==1)\n    x=-y[0]-0.5*y[1];\n  return x;\n} \n \n', 'tags': '', 'url': 'C或C++程式碼.html'}, {'title': 'Lua 程式碼', 'text': '-- 導入 js 模組\njs = require("js")\n-- 取得 window\nwindow = js.global\n-- 猜小於或等於 n 的整數\nbig = 100\n-- 計算猜測次數, 配合 while 至少會猜一次\nnum = 1\n-- 利用 window:prompt 方法回應取得使用者所猜的整數\nguess = window:prompt("請猜一個介於 1 到 "..big.." 的整數")\n-- 利用數學模組的 random 函數以亂數產生答案\nanswer = math.random(big)\noutput = ""\n-- 若沒猜對, 一直猜到對為止\nwhile answer ~= tonumber(guess) do\n    if answer > tonumber(guess) then\n        output = "猜第 "..num.." 次, guess="..guess..", answer="..answer.." - too small"\n        print(output)\n    else\n        output = "猜第 "..num.." 次, guess="..guess..", answer="..answer.." - too big"\n        print(output)\n    end \n    guess = window:prompt(output..", 請猜一個介於 1 到 "..big.." 的整數")\n    num = num + 1\nend\nprint("總共猜了 "..num.." 次, answer=guess="..answer.." - correct")\n     \n \n', 'tags': '', 'url': 'Lua 程式碼.html'}, {'title': 'Javascript 程式碼', 'text': 'STLViewer = function(stlpath, plotarea) {\n\n\tvar mycanvas = document.getElementById(plotarea);\n\tvar viewer = new JSC3D.Viewer(mycanvas)\n\tvar theScene = new JSC3D.Scene;\n\t////Initialize with a default file:\n\t//var stlpath = "../../../assets/2013-10-23/stl/box.STL"\n\t//var stlpath = "../../../assets/2013-10-23/stl/taj.stl"\n\tviewer.setParameter(\'SceneUrl\', stlpath);\n    viewer.setParameter(\'InitRotationX\', 20);\n\tviewer.setParameter(\'InitRotationY\', 20);\n\tviewer.setParameter(\'InitRotationZ\', 0);\n\tviewer.setParameter(\'ModelColor\', \'#CAA618\');\n\tviewer.setParameter(\'BackgroundColor1\', \'#FFFFFF\');\n\tviewer.setParameter(\'BackgroundColor2\', \'#383840\');\n\tviewer.init();\n\tviewer.update();\n\t////init done\n\tvar canvas_drop = document.getElementById(\'canvas-drop\')\n\t/*var dropzone = document.getElementById(\'dropzone\')\n\tdropzone.addEventListener(\'dragover\', handleDragOver, false);\n\tdropzone.addEventListener(\'drop\', handleFileSelect, false); */\n\tcanvas_drop.addEventListener(\'dragover\', handleDragOver, false);\n\tcanvas_drop.addEventListener(\'drop\', handleFileSelect, false);\n\n////Drag and drop logic:\n\tfunction handleFileSelect(evt) {\n\t    evt.stopPropagation();\n\t    evt.preventDefault();\n\t    var files = evt.dataTransfer.files;\n\t    console.log(evt)\n\t    console.log(files)\n\t    preview_stl(files[0])\n\t  }\n\n\t  function handleDragOver(evt) {\n\t    evt.stopPropagation();\n\t    evt.preventDefault();\n\t    evt.dataTransfer.dropEffect = \'copy\';\n\t  }\n\n////jsc3d logic\n\tvar handle_file_select = function(e) {\n\t\te.stopPropagation()\n\t\te.preventDefault()\n\t\tvar f = e.target.files[0]\n\t\tpreview_stl(f)\n\t}\n\n\tfunction preview_stl(f) {\n\t\tvar reader = new FileReader()\n\t\tvar ext = f.name.split(".")[1]\n\n\t\tfunction setup_viewer() {\n\t\t\tviewer.setParameter(\'InitRotationX\', 20);\n\t\t\tviewer.setParameter(\'InitRotationY\', 20);\n\t\t\tviewer.setParameter(\'InitRotationZ\', 0);\n\t\t\tviewer.setParameter(\'ModelColor\', \'#CAA618\');\n\t\t\tviewer.setParameter(\'BackgroundColor1\', \'#FFFFFF\');\n\t\t\tviewer.setParameter(\'BackgroundColor2\', \'#383840\');\n\t\t\tviewer.setParameter(\'RenderMode\', "flat");\n\t\t}\n\t\tsetup_viewer()\n\n\t\treader.onload = (function(file) {\n\t\t\treturn function(e) {\n\t\t\t\ttheScene = new JSC3D.Scene\n\t\t    \tstl_loader = new JSC3D.StlLoader()\n\t\t    \tstl_loader.parseStl(theScene, e.target.result)\n\t\t      \t//viewer.init()\n\t\t      \tviewer.replaceScene(theScene)\n\t\t      \tviewer.update()\n\t\t      \tconsole.log("file reader onload")\n\t\t\t}\n\t\t})(f)\n\n\t\tif (ext.toLowerCase() != "stl") {\n\t\t\talert("That doesn\'t appear to be an STL file.");\n\t\t} else {\n\t\t\treader.readAsBinaryString(f)\n\t\t}\n\t}\n}\n \n \n', 'tags': '', 'url': 'Javascript 程式碼.html'}, {'title': 'Html 原始碼', 'text': '<html>\n   <head>\n      <meta http-equiv="content-type" content="text/html;charset=utf-8">\n      <title>CMSimfly</title>\n      <link rel="stylesheet" type="text/css" href="/static/cmsimply.css">\n   </head>\n   <body>\n      <div class=\'container\'>\n      <nav>\n         <ul id=\'css3menu1\' class=\'topmenu\'>\n            <li><a href=\'/get_page/簡介\'>簡介</a>\n            <li><a href=\'/get_page/目錄結構\'>目錄結構</a>\n            <li>\n               <a href=\'/get_page/頁面編輯\'>頁面編輯</a>\n               <ul>\n                  <li>\n                     <a href=\'/get_page/插入程式碼\'>插入程式碼</a>\n                     <ul>\n                        <li><a href=\'/get_page/Java 程式碼\'>Java 程式碼</a>\n                        <li><a href=\'/get_page/Python 程式碼\'>Python 程式碼</a>\n                        <li><a href=\'/get_page/C或C++程式碼\'>C或C++程式碼</a>\n                        <li><a href=\'/get_page/Lua 程式碼\'>Lua 程式碼</a>\n                        <li><a href=\'/get_page/Javascript 程式碼\'>Javascript 程式碼</a>\n                        <li><a href=\'/get_page/Html 原始碼\'>Html 原始碼</a></li>\n                        </li>\n                     </ul>\n               </ul>\n            <li><a href=\'/get_page/網際簡報\'>網際簡報</a>\n            <li><a href=\'/get_page/網誌編輯\'>網誌編輯</a>\n            <li><a href=\'/get_page/已知錯誤\'>已知錯誤</a></li>\n         </ul>\n      </nav>\n      <section>\n         <form method=\'post\' action=\'/ssavePage\'>\n         <textarea class=\'simply-editor\' name=\'page_content\' cols=\'50\' rows=\'15\'><h3>Html 原始碼</h3></textarea>\n         <input type=\'hidden\' name=\'page_order\' value=\'9\'>\n         <input type=\'submit\' value=\'save\'>\n         <input type=button onClick="location.href=\'/get_page/Html 原始碼\'" value=\'viewpage\'>\n         </form>\n      </section>\n   </body>\n</html>\nCOPY TO CLIPBOARD\t \n \n Deep Learning', 'tags': '', 'url': 'Html 原始碼.html'}, {'title': 'Virtualbox', 'text': '', 'tags': '', 'url': 'Virtualbox.html'}, {'title': 'Virtualbox介紹', 'text': '\n 利用 Virtualbox 建立虛擬 Ubuntu 18.04 網際內容管理系統伺服主機: 1 . 安裝最新版的 Virtualbox 2 . 建立 Ubuntu 18.04 虛擬主機 3 . 以網路卡橋接啟動 Ubuntu 伺服器 4 . 以 sudo apt install nginx 安裝 nginx WWW 伺服器 5 . 以 ifconfig 查 Ubuntu 伺服器的 IP, 測試 nginx 伺服器是否可以連線 6 . 以 Windows 10\xa0 下的 Filezilla client, 將編輯好的 nginx 設定檔案送到 Ubuntu 7 .\xa0利用 Ubuntu 指令將設定檔案搬至設定位置後, 以 /etc/init.d/nginx restart 重新啟動 nginx 8 . 在 Ubuntu 中以 sudo apt install uwsgi 安裝 uwsgi 9 . 在 Windows 10 編輯 uwsgi 與 nginx 所需的設定檔案, 完成後以 filezilla 送至 Ubuntu. 10 . 將 CMSimfly 程式碼送到 Ubuntu 伺服器中對應目錄後. 11 . 在 Ubuntu 建立 cmsimfly 服務, 並設定隨機啟動. 12 . 完成後, 在 Windows 10 以瀏覽器連線至 CMSimfly, 確認動態網頁與靜態網頁可以在虛擬主機中正常啟動. 13 . 以上相關網際內容管理在機械工程相關應用可參考:\xa0 https://www.driveworks.co.uk \xa0或\xa0 https://robotbenchmark.net/', 'tags': '', 'url': 'Virtualbox介紹.html'}, {'title': 'VitualBox特色', 'text': '\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\xa0 \n 能安裝多個客戶端作業系統，每個客戶端系統皆可獨立開啟、暫停與停止。 \n \n 支援64位元客戶端作業系統，即使主機使用 32位元 CPU (6.0版後主機僅支援64位元作業系統) \n 支援 SATA 硬碟 NCQ 技術 \n 虛擬硬碟快照 \n 無縫視窗模式（須安裝客戶端驅動程式） \n 能夠在主機端與客戶端共用剪貼簿（須安裝客戶端驅動） \n 在 主機端與客戶端間建立共用資料夾 （須安裝客戶端驅動） \n 內建遠端桌面伺服器 \n 支援VMware VMDK磁碟檔及Virtual PC VHD磁碟檔格式 \n 3D虛擬化技術支援OpenGL（2.1版後支援）、Direct3D（3.0版後支援）、WDDM（4.1版後支援） \n 最多虛擬32顆 CPU （3.0版後支援） \n 支援VT-x與AMD-V硬體虛擬化技術 \n iSCSI支援 \n USB與USB2.0支援 \n \n', 'tags': '', 'url': 'VitualBox特色.html'}, {'title': 'VitualBox操作練習w12', 'text': '\n \n 開啟設定好的網頁之後 \n \n 輸入帳號&密碼 kmol2019 \n 輸入ifconfig \n \n 第一屆段完成後打https://192.168.56.2可出現以下網頁 \n \n \n \n \n \n \n 打https://192.168.56.2:5443 \n \n', 'tags': '', 'url': 'VitualBox操作練習w12.html'}, {'title': 'Virtualbox重新安裝配置設定w15', 'text': '\n \xa0\n 1.先下載更新Virtualbox6.0版本，將 Virtualbox開啟，新增一個虛擬主機，名稱為 ub-2 \n \n 2.建立虛擬主機開始點選選項 \n \n \n \n 註:變更為500GB \n \n 3 .點選settings->Network->Bridge..->Rei.... \n \n 4.按開啟綠色箭頭 \n \n \n \n 5.依序操作 \n \n \n \n \n \n \n \n \n \n \n 註:設號密碼 \n \n \n \n 6.完成 \n \n \n', 'tags': '', 'url': 'Virtualbox重新安裝配置設定w15.html'}, {'title': 'VitualBox老師課程', 'text': '\n Virtualbox按鍵解說: \n K >上 \n J >下 \n H >左 \n L >右 \n Tab or上下>選擇 \n space鍵[x]Install//OpenSSH \n Sudo apt install nginx>1.動能配置 2.開機前設定網路(Bridged Real...) \n Sudo(管理員身分)\xa0 \xa0 \xa0 nginx(3W伺服) \n 總結:\xa0VirtualBox\xa0是一個 虛擬化軟體 也不用錢，我們 可以使用 VirtualBox 來產生一台或多台虛擬化的電腦 ，然後 再將我們想要的作業系統裝在虛擬化的電腦中 。 \n', 'tags': '', 'url': 'VitualBox老師課程.html'}, {'title': '深入學習', 'text': '', 'tags': '', 'url': '深入學習.html'}, {'title': '導入Ungit', 'text': 'start.bat跟start.cadlab.bat差別 \n 因Home位置不同，適用範圍有所不同!! start.bat=>學校外適用。 start.cadlab.bat=>學校內適用，不能使用在學校外的地方。 \n STAPE1 \n 1.設定路徑=> \xa0 \xa0 set path8=%Disk%:\\nodejs;%Disk%:\\nodejs\\appdata\\roaming\\npm;放置到start.cadlab的sciTE裡\xa0 \xa0 \xa0 的path7後。 \n 2.將 path8 納入 path 設定=> \xa0 \xa0 %path8%；->讓nodejs.ungit直行即可使用。 \n \xa0 \xa0 在同上步驟中的sciTE中有path程式碼將%path8%；直接放在最後方。 \n \xa0 \n 3.分別start.bat跟start.cadlab.bat都如上兩步驟操作並儲存。 \n \xa0 \n 4.按start.cadlab.bat打入ungit可作執行，之後出現頁面表示設定成功，按允許儲存，再將跳出\xa0 \xa0 \xa0 \xa0 的網頁關掉。 \n \xa0 \n 5.針對nodejs設定路徑=> \n \xa0 \xa0 [set. USERPROFILE=%Disk%:\\home]start.cadlab.bat中需加入以上程式碼\xa0\xa0\xa0\xa0\xa0 \xa0 \xa0 \xa0 \xa0 \xa0\xa0在\xa0set.HOME=%Disk%:\\home-cadlab之下方增加。 \n \xa0 *將以上程式關掉(剛才使用的程式碼還不用關。若關掉，kmol-2019->data->scite->bin->按\xa0 \xa0 \xa0 \xa0 \xa0 scite黑色圓點。 \n 以便能作動，因nodejs系統user的路徑找git的設定檔，但找不到，又因為需變為可攜程式，必須透過上述方式來作動!! \n 6.start.bat也是上述步驟重複一遍。完成初步動作。 \n \n STAPE2 \n 可在mde.tw中2019 spring...裡，實習任務之任務2有明確步驟可找到下面的程式。 \n ungit --launchBrowser=0 --launchCommand "C:\\PROGRA~2\\Google\\Chrome\\Application\\chrome.exe\xa0 %U" \n 需使用簡寫，不然無法啟動。並新建批次檔。 \n', 'tags': '', 'url': '導入Ungit.html'}, {'title': '新建批次檔步驟', 'text': '如何建立批次檔? Step1: 去SciTe新建檔案>將程式複製貼上 >Save as 在隨身碟Y槽 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0[為了與ungit作區別，因此將其名稱為kungit.bat]>從可攜home找出對應的git \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 設定 Step2: 去隨身碟Y槽>home>查看有無git設定>沒有的話測試程式碼能否運作>git clone測試網頁 打開ungit在CMS下面的各時間提交之內容>[進入測試網頁>打kungit指令] \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0條件:\xa0 1.必須在某個git倉儲下指令(cd....)>目的為由Chrom開啟 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 2.必須啟動ungit對應的的\\批次檔。 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0為了確保關閉nodejs不干擾運作，下載process explorer ，取64....的Z複製下來，貼在y槽以便隨時關閉程式。 找到在最下面的綠色node按右鍵kill process>把nodejs上次對應的8443的批次檔關閉，指令便可正常運作。(即可不會抱怨。) 刪除nodejs之8443的批號後，重新打入kungit指令即可看到ungit網頁跳出。', 'tags': '', 'url': '新建批次檔步驟.html'}, {'title': '已知錯誤', 'text': '期中問題 \n \n 全部頁面會因無法正確解讀而誤刪 \n \n 在特定情況下, 系統會誤刪 config/content.htm 檔案, 目前在單頁或全部頁面編輯存檔之前, 或將上一版本的 content.htm 存入 content_back.htm, 若 content.htm 內容被程式誤刪, 可以利用備份檔案複製回原始內容後, 再進行後續處理. \n \n 頁 面標題不支援特殊符號 \n \n 各頁面標題目前不支援特殊符號, 例如: "/", "?" 等, 若已經發生程式無法解讀頁面的情況, 只能從編輯 config/content.htm 下手, 若系統位於遠端, 則後續必須要再設法提供一個額外的編輯 config/content.htm 檔案的網際連結功能. \n \n Video 引用不支援內部引用 \n \n tinymce 中插入 video 的小視窗, 要移除引用的圖像與連結, 因為一般建議不要在內容中存入 .mp4 的影片資料, 而只接受引入影片 URL 連結. \n \n 單機與網路差別\xa0  \xa0 \n \n 單機之資料庫只供本機使用，網路之資料庫為透過區域網路設定可供多人共用。 \n \n 為什麼協同反而無法取得正確近端 \n \n \xa0因為協同後，需要pull request才能真正取得倉儲之近端，在指令馬中打git pull，即可將近端 \n \xa0遠端統合， 便可把資料push上去。 \n \n 兩個人同時用近端並同時上傳檔案，但有合併衝突怎麼辦 \n \n \xa0先將.htm檔拖曳到SciTE文字編輯器，找出衝突點，並刪除頭(<<<<<<<)尾(>>>>>>>)與接\xa0合處 (=======)後，儲存並重新進入近端，將之轉成Generapage，最後git add .\xa0 git commit\xa0並git push。 \n \n 為什麼倉儲會突然找不到網頁，但在遠端還可以看到 \n \n 有可能是因為檔案中又包住另一個git clone 下來的資料，造成程式碼衝突，因而，使得變成404網頁。 \n \xa0* 處理方式:建議不要將檔案連續包夾在同一個資料夾裡面。 \n \n 為什麼更改字型但是網頁爆掉 \n \n 由於前後自行更改大小不一，因而造成網頁爆掉，需要到SciTE去刪除設定大小的前後(head3) \n 即可救回網頁。 P.S.建議不要隨便更改字型大小。 \n \n 網頁爆掉如何救回 \n \n 檢視問題點在哪行程式碼，將之移除，並重新檢視、送出，以下為指令: \n Git log(查看從最近到最遠得提交日誌) \n Git checkout 7碼(丟棄工作區文檔的修改) \n Git status(查看當前git倉儲狀態) \n Git diff\xa0(查看修改的文檔內容) \n Git status(查看當前git倉儲狀態) \n Git stash(將寫到一半的代碼從工作區拿走存起來) \n Git status(查看當前git倉儲狀態) \n 期末問題 \n \n 新版與舊版倉儲產生倉儲 \n \n 將舊版倉儲一律改版成新版，在原先舊版資料檔中保存config目錄，之後將新版倉儲資料複製撇除git檔全部覆蓋後，重新進入近端推送變更資料後即可解決衝突問題。 \n 補:假如沒有去做更新改版的動作，可能會導致資料推送不完整或是push不上去的問題。 \n \n 出現H1空白標題 \n \n 去Source code更改，刪除空白頁 ，網頁卻出現錯誤 \n 解決方法: \n \n 1.前往隨身碟中該倉儲的config資料夾中 \n 2.分別有content.htm跟 content_backup.htm \n 3.刪除content.htm \n 4.再把content_backup.htm改成content.htm \n 或者拉到文字編輯器中找尋錯誤的地方，更改後儲存( 建議先留一個備份 ) \n 5.回去9443重整網頁即可 \n \n 出現兩個重複網頁 \n \n 如下: \n \n 原因是有兩個重複的H1， 改掉其中一個相同名稱的H1即可 。 \n', 'tags': '', 'url': '已知錯誤.html'}, {'title': '期末報告評分標準', 'text': '每一位學員自我查驗項目: 1. 是否在第十七週上課前完成個人至多 5 分鐘的期末報告影片, 上傳至以學號登錄的 Youtube 帳號下, 並分別嵌入個人網站中, 且標題分別為: \xa0\xa0\xa0四技部網際內容管理課程 \xa0 \xa0 \xa0 國立虎尾科技大學 - 機械設計工程系 - 網際內容管理期末報告 - 學號 - 姓名 \n 2 . 每一位學員 上台進行期末自評簡報 時, 必須 舉證個人在各週實際完成的 Github 倉儲歷程資料, 說明個人在分組與全班協同過程中所扮演的角色與貢獻 , 且依據課程評分比例進行自評. 以下為各課程的學員評分比例與評分方式: \n 評分比例: \xa0 \xa0 學員出席 ( 20% ) \xa0 \xa0 電腦組裝與操作系統安裝 ( 10%)  - 以 Virtualbox 虛擬主機配置與設定取代實體安裝 \xa0 \xa0 網路連線配置與設定\xa0 ( 10% ) \xa0 \xa0 Github 倉儲與 CMSimfly 配置 ( 30% ) \xa0 \xa0 CMSimfly 操作 ( 20% ) \xa0 \xa0 CMSimfly 開發 ( 10% ) 評分方式: \xa0 \xa0 WCM 每週自評與互評表單: \xa0 https://goo.gl/forms/gExeWw3JIrenXi453 \xa0 \xa0 學員自我評量 ( 30% ) \xa0 \xa0 分組自我評量 ( 30% ) \xa0 \xa0 倉儲歷程查驗 ( 40% ) \n', 'tags': '', 'url': '期末報告評分標準.html'}, {'title': '網際內容管理期末報告影片', 'text': '', 'tags': '', 'url': '網際內容管理期末報告影片.html'}, {'title': '網際內容管理期末報告', 'text': '\n \n \n \n \n \n \n \n \n \n \n \n 連結 : https://s40723102.github.io/40723102.github.io/ \n \n 連結 : https://mdewcm2019.github.io/wcm2019-task-g1/content/ \n \n \n 指令操作 \n 連結: https://youtu.be/nEYFt8Y2m5s \n 倉儲改版 \n 連結: https://youtu.be/7j5U9xiTAiE \n \n \n', 'tags': '', 'url': '網際內容管理期末報告.html'}]};